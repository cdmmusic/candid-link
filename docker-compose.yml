services:
  # n8n 워크플로우 자동화
  n8n:
    image: n8nio/n8n:latest
    container_name: album-links-n8n
    restart: unless-stopped
    ports:
      - "${N8N_PORT:-5678}:5678"  # 환경 변수로 포트 설정 가능
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER:-admin}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD:-changeme}
      - N8N_HOST=0.0.0.0
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - N8N_SECURE_COOKIE=false
      - WEBHOOK_URL=${WEBHOOK_URL:-http://localhost:5678/}
      - GENERIC_TIMEZONE=Asia/Seoul
    volumes:
      - ./n8n_data:/home/node/.n8n
      - ./workflows:/workflows
    networks:
      - album-links-network

  # Selenium Companion API (Companion.global 자동화)
  companion-api:
    build:
      context: .
      dockerfile: Dockerfile.companion-api
    container_name: album-links-companion-api
    restart: unless-stopped
    ports:
      - "${COMPANION_API_PORT:-5001}:5001"  # 환경 변수로 포트 설정 가능
    environment:
      - FLASK_ENV=production
      - SELENIUM_HUB=http://selenium-chrome:4444
    depends_on:
      - selenium-chrome
    networks:
      - album-links-network

  # Selenium Chrome (헤드리스 브라우저)
  selenium-chrome:
    image: seleniarm/standalone-chromium:latest
    platform: linux/arm64
    container_name: album-links-selenium
    restart: unless-stopped
    ports:
      - "${SELENIUM_PORT:-4444}:4444"  # 환경 변수로 포트 설정 가능
    shm_size: 2gb
    environment:
      - SE_NODE_MAX_SESSIONS=3
      - SE_NODE_SESSION_TIMEOUT=300
    networks:
      - album-links-network

  # 자동 수집 워커 (Python 스크립트)
  collector:
    build:
      context: .
      dockerfile: Dockerfile.collector
    container_name: album-links-collector
    restart: unless-stopped
    environment:
      - TURSO_DATABASE_URL=${TURSO_DATABASE_URL}
      - TURSO_AUTH_TOKEN=${TURSO_AUTH_TOKEN}
      - N8N_WEBHOOK_URL=http://n8n:5678/webhook/album-links
    volumes:
      - ./scripts:/app/scripts
      - ./.collection_progress.txt:/app/.collection_progress.txt
    depends_on:
      - n8n
      - companion-api
    networks:
      - album-links-network
    command: python3 scripts/auto_collect_all.py

  # 웹 UI 및 REST API (SQLite DB)
  db-api:
    build:
      context: .
      dockerfile: Dockerfile.db-api
    container_name: album-links-db-api
    restart: unless-stopped
    ports:
      - "${DB_API_PORT:-5002}:5002"
    volumes:
      - ./database:/app/database
    networks:
      - album-links-network

networks:
  album-links-network:
    driver: bridge
